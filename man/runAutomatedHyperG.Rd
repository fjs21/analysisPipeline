\name{runAutomatedHyperG}
\alias{runAutomatedHyperG}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
run automated hypergeometric tests on all contrasts using GO and KEGG database
}
\description{
This function performs hypergeometric tests using probes from all contrasts against GO and KEGG databases.
}
\usage{
runAutomatedHyperG(eset, contrast.details, saveData = FALSE)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{eset}{an \code{ExpressionSet} object of expression data to be analyzed.}
  \item{contrast.details}{a \code{list} object generated by \code{\link{parseContrasts}}.}
  \item{saveData}{a \code{boolean}. If \code{TRUE} then an RData snapshot will be saved after completion.}
}
\details{
This function performs over-representation pathway analysis on each of the up- and down-regulated gene lists
 defined in \code{contrast.details} using GO and KEGG databases. The \code{\link[topGO]{topGO}} package is used to
 analyze GO terms, and hypergeometric testing used to analyze KEGG pathway enrichment. See
 \code{\link{calculateGOHyperG}} and \code{\link{calculateKEGGHyperG}} for more details.

Comma delimited data tables of enrichment of each contrast are generated and stored in the working directory.
}
\value{
This function returns a list object.
}
%\references{
%% ~put references to the literature/web site here ~
%}
\author{
Fraser Sim <fjsim@buffalo.edu>
}
%\note{
%%  ~~further notes~~
%}
%% ~Make other sections like Warning with \section{Warning }{....} ~
\seealso{
 \code{\link{parseContrasts}}, \code{\link{calculateGOHyperG}}, \code{\link{calculateKEGGHyperG}}
}
\examples{
# load data
data(eset)
# set chipAnnotation
chipAnnotation = annotation(eset)

# load contrast.details
data(contrast.details)

\dontrun{contrast.HyperG <- runAutomatedHyperG(eset = eset, contrast.details = contrast.details, saveData = FALSE)}
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
%\keyword{ ~kwd1 }
%\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
